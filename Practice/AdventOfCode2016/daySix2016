#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <algorithm>
#include <iomanip>


//to clean up the memory of the array
void delet(int**& array){
    for(unsigned int i = 0; i < 26; ++i){
        delete []array[i];
    }
    delete []array;
}

//function to test if the sorting was correct
void printAlphabet(int** bet){
    for(unsigned int i = 0; i < 26; ++i){
        for(unsigned int k = 0; k < 2; ++k){
            if(k == 0)
                std::cout << static_cast<char>(bet[i][k] + 97) << ", ";
            else
                std::cout << bet[i][k] << ", ";

        }
        std::cout << std::endl;
    }
    std::cout << "\n\n\n\n";
}

//recursive function(because I felt like it) to get the least likely character
char getLeastLikely(int** bet, int index){
    
    if(index == 0){
        return '-';
    }else if(bet[index][1] != 0){
        return (bet[index][0] + 97);
    }else{
        return getLeastLikely(bet, index - 1);
    }
}

//sort the array using a bubble sort(ugh I know...)
char sortArray(int** bet){
    
        bool swapped = false;
        
        do{
            swapped = false;
            for (unsigned int i = 0; i < 25; i++){
                if (bet[i][1] < bet[i + 1][1]){
                    std::swap(bet[i], bet[i + 1]);
                    swapped = true;
                }
            }
            
        }while(swapped);
    
    //for part two use this return...
//    return getLeastLikely(bet, 25);
    
    //for part one use this return
    return static_cast<char>(bet[0][0] + 97);
}

int main(void){
    
    std::string answer = "";
    std::string code = "";
    
    for(unsigned int i = 0; i < 8; ++i){
        
        //The 0 index of each array is the character number and the 1 index is the amount of times
        int** alphabet = new int*[26];
        //initialize the thing above
        for(unsigned int i = 0; i < 26; ++i){
            alphabet[i] = new int[2];
            alphabet[i][0] = i;
            alphabet[i][1] = 0;
        }
        
        std::ifstream fin("/Users/gavingray/Desktop/input.txt");
        
        while(fin >> code){
            alphabet[code[i] - 97][1]++;
        }
        
        answer += sortArray(alphabet);
        
        delet(alphabet);
        fin.close();
    }
    
    std::cout << "This is the code: " << answer << std::endl;
    
	return 0;
}
