#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <algorithm>
#include <iomanip>
#include <memory>
#include "md5.hpp"

/***********************************************************
*           ADVENT OF CODE DAY 14 C++
*
*          My puzzle input is: cuanljph
*As is this code will produce the answer for part two,
*In order to get results for part One comment out/delete
*the for loops that calculate the md5 2016 additional times
*
*Pass the puzzle input in as argv[1]
*
*In part two to avoid calculating an extended hash
*I stored previously calculated hashes in a vector of
*strings.  This significantly decreased run time
*
*It's not the fastest code but it does work, my program
*ran in about one minute.
*
*
************************************************************/


//create the string with the counter on the back
std::string getString(std::string front, int back){
    std::string returnString = "";
    
    returnString += front;
    returnString += std::to_string(back);
    
    return returnString;
}

void lowerCase(std::string& string){
    for(unsigned int i = 0; i < string.length(); i++){
        string[i] = tolower(string[i]);
    }
}

template< typename T >
std::string int_to_hex( T i )
{
    std::stringstream stream;
    //    stream << "0x"
    stream << std::hex << i;
    return stream.str();
}

bool checkForFive(std::string code, char check){
    for(unsigned int i = 0; i < code.length() - 4; ++i){
        if(code[i] == check && code[i] == code[i + 1] && code[i] == code[i + 2] && code[i] == code[i + 3] && code[i] == code[i + 4]){
            return true;
        }
    }
    return false;
}

bool checkTriple(std::string code, int counter, std::string argv, std::vector<std::string>& library){
    bool doneIt = false;
    for(unsigned int i = 0; i < code.length() - 2 && doneIt == false; ++i){
        if(code[i] == code[i + 1] && code[i] == code[i + 2]){
            doneIt = true;
            for(unsigned int k = counter + 1; k <= counter + 1000; ++k){
                std::string checkCode;
                
                
                if(library[k] != " "){
                    checkCode = library[k];
                }else{
                    checkCode = int_to_hex(md5(getString(argv, k)));
                    lowerCase(checkCode);
                    
                    for(unsigned int j = 0; j < 2016; ++j){
                        checkCode = int_to_hex(md5(checkCode));
                        lowerCase(checkCode);
                    }
                    
                    library[k] = checkCode;
                }
       
                
                
                
                
                if(checkForFive(checkCode, code[i])){
                    return true;
                }
            }
        }
    }
    return false;
}

int main(int argc, char* argv[]){
    
//    std::ifstream fin("/Users/gavingray/Desktop/input.txt");
    
    int counter = -1,
    found = 0;
    std::string code;
    std::vector<std::string> library(30000, " ");
    
    while(found < 64){
        counter++;
        
        if(library[counter] != " "){
            code = library[counter];
        }else{
            code = int_to_hex(md5(getString(argv[1], counter)));
            lowerCase(code);
            
            for(unsigned int j = 0; j < 2016; ++j){
                code = int_to_hex(md5(code));
                lowerCase(code);
            }
            library[counter] = code;
        }
    
        
        if(checkTriple(code, counter, argv[1], library)){
            found++;
        }
    }
    
    std::cout << "Your answer:  " << counter << std::endl;
    
//    fin.close();

    
    return 0;
}
