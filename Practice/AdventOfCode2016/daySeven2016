#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <sstream>
#include <algorithm>
#include <iomanip>

bool checkABA(char one, char middle, char two){
    if(one == two && one != middle){
        return true;
    }
    return false;
}

bool checkBAB(std::vector<std::string> bracket, std::string checkString, int x){
    
    for(unsigned int i = 0; i < bracket.size(); ++i){
        for(unsigned int k = 0; k < bracket[i].length() - 2; ++k){
            //check to see if the characters match up to the ones in the string at pos x.
            if(bracket[i][k] == checkString[x + 1] && bracket[i][k + 1] == checkString[x] && bracket[i][k] == bracket[i][k + 2]){
                std::cout << bracket[i][k] << bracket[i][k + 1] << bracket[i][k + 2] << " ";
                return true;
            }
        }
    }
    return false;
}

bool checkSSL(std::string string, std::vector<std::string> inBracket){
    for(unsigned int i = 0; i < string.length() - 2; ++i){
        if(checkABA(string[i], string[i + 1], string[i + 2])){
            if(checkBAB(inBracket, string, i)){
                
                std::cout << string[i] << string[i + 1] << string[i + 2] << std::endl;

                return true;
            }
        }
    }
    return false;
}

bool checkForChar(std::string string, char checkIt){
    for(unsigned int i = 0; i < string.size(); ++i){
        if(string[i] == checkIt){
            return true;
        }
    }
    return false;
}

void printIP(std::vector<std::string> brackets){
    for(unsigned int i = 0; i < brackets.size(); ++i){
        std::cout << brackets[i] << ",\n";
    }
    std::cout << std::endl;
}


bool checkString(std::string word){
    for(unsigned int i = 0; i < word.length() - 3; ++i){
        if(word[i] == word[i + 3] && word[i + 1] == word[i + 2] && word[i] != word[i + 1]){
            return true;
        }
    }
    return false;
}


bool checkBrackets(std::vector<std::string> broken){
    for(unsigned int i = 0; i < broken.size(); ++i){
        if(checkString(broken[i])){
            return true;
        }
    }
    return false;
}


int main(void){
    
    std::ifstream fin("/Users/gavingray/Desktop/input.txt");
    std::string line;
    int returnTotalPartOne = 0,
    returnTotalPartTwo = 0;
    
    while(std::getline(fin, line)){
        
        std::vector<std::string> brokenUp;
        std::vector<std::string> bracketed;
        std::istringstream sin(line);
        std::string segment;
        
        while(std::getline(sin, segment, '[')){
            
            
            if(!checkForChar(segment, ']')){
                brokenUp.push_back(segment);
            }else{
                std::string secondSegment;
                std::istringstream satan(segment);
                int x = 0;
                while(std::getline(satan, secondSegment, ']')){
                    if(x == 1){
                        brokenUp.push_back(secondSegment);
                    }else{
                        bracketed.push_back(secondSegment);
                    }
                    x++;
                }
            }
        }
        
        //Write a function that goes through the string of bracketed and brokenUp
        for(unsigned int i = 0; i < brokenUp.size(); ++i){
            if(checkSSL(brokenUp[i], bracketed)){
                returnTotalPartTwo++;
                break;
            }
        }
        
        if(!checkBrackets(bracketed) && checkBrackets(brokenUp)){
            returnTotalPartOne++;
        }
        sin.clear();
    }
    
    std::cout << "part1: The total amount of correct IP's with ABBA: " << returnTotalPartOne << std::endl << std::endl;
    std::cout << "part2: The total amount of correct SSL IP's: " << returnTotalPartTwo << std::endl << std::endl;
    
    fin.close();
   
    return 0;
}
